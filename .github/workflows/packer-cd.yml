name: CD Pipeline for Testing Packer and Artifact Deployment

on:
  pull_request:
    branches:
      - main

jobs:
  build_and_create_ami:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Set up MySQL
        uses: shogo82148/actions-setup-mysql@v1
        with:
          mysql-version: "8.0"
          root-password: ${{ secrets.MYSQL_PASSWORD }}
          user: ${{ secrets.MYSQL_USER }}
          password: ${{ secrets.MYSQL_PASSWORD}}

      # Create a database using the name stored in secrets
      - name: Create MySQL Database
        run: mysql -u${{ secrets.MYSQL_USER}} -p${{ secrets.MYSQL_PASSWORD }} -e "CREATE DATABASE IF NOT EXISTS ${{ secrets.MYSQL_DB }};"


      - name: Create application.properties
        run: |
          mkdir -p src/main/resources 
          echo "spring.datasource.url=jdbc:mysql://${{ secrets.MYSQL_HOST }}:${{ secrets.MYSQL_PORT }}/${{ secrets.MYSQL_DB }}" > src/main/resources/application.properties
          echo "spring.datasource.username=root" >> src/main/resources/application.properties
          echo "spring.datasource.password=${{ secrets.MYSQL_PASSWORD }}" >> src/main/resources/application.properties
          echo "spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver" >> src/main/resources/application.properties
          echo "spring.jpa.hibernate.ddl-auto=update" >> src/main/resources/application.properties
          echo "spring.jpa.show-sql=true" >> src/main/resources/application.properties
          echo "spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect" >> src/main/resources/application.properties

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      # Optional: Debugging step to verify file locations
      - name: List contents of target directory
        run: |
          ls -R target/

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Packer
        uses: hashicorp/setup-packer@v2
        with:
          version: latest

      - name: Packer Init
        working-directory: ./packer
        run: packer init .

      - name: Validate Packer Template
        working-directory: ./packer
        run: packer validate .

      - name: Build AMI with Packer
        run: packer build -var-file=packer/variables.pkr.hcl packer/packer.pkr.hcl
